@page
@model UI.Pages.Jewelries.DetailsModel

@{
    ViewData["Title"] = "Jewelry Details";
    var jewelry = Model.Jewelry;
}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
</head>
<style>


    .report {
        width: 100%;
        max-width: 80%;
        height: 100%;
        margin: 0 auto;
        border: 1px solid #ccc;
        padding: 50px;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }

    .header, .footer {
        text-align: center;
    }

    .content {
        display: flex;
    }

    .left {
        width: 20%;
    }

    .right {
        width: 80%;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
    }

    th, td {
        border: 1px solid #ccc;
        padding: 8px;
        text-align: left;
    }

    th {
        background-color: #f2f2f2;
    }

    .title-material {
        margin: 20px 0;
    }
</style>
    <div class="report">
        <div class="header">
            <h1>Jewelry Report</h1>
            <h2>ID No: @jewelry.JewelryId</h2>
        </div>
        <div class="content">
            <div class="left">
                <img src="data:image/*;base64,@Model.ImageDataBase64String" alt="Jewelry Image" style="width:100%; max-width:300px;">
            </div>
            <div class="right">
                <div>
                    <h4 class="title-material">Product Information</h4>
                    <table>
                        <tr>
                            <th>Jewelry ID</th>
                            <td>@jewelry.JewelryId</td>
                        </tr>
                        <tr>
                            <th>Jewelry Name</th>
                            <td>@jewelry.JewelryName</td>
                        </tr>
                        <tr>
                            <th>Description</th>
                            <td>@Html.Raw(jewelry.Description)</td>
                        </tr>
                        <tr>
                            <th>Total Weight</th>
                            <td>@jewelry.TotalWeight Toz</td>
                        </tr>
                        <tr>
                            <th>Labor Price</th>
                            <td>@jewelry.LaborPrice.ToString("C2")</td>
                        </tr>
                        @{
                            var haveGem = false;
                            foreach (var material in Model.Jewelry.JewelryMaterials)
                            {
                                if (!material.Material.IsMetail)
                                {
                                    haveGem = true;
                                    break;
                                }
                            }
                        }
                        <tr>
                            <th>Quantity in stock</th>
                            <td>@(haveGem ? 1 : jewelry.Quantity)</td>
                        </tr>
                        <tr>
                            <th>Category</th>
                            <td>@jewelry.Category.CategoryName</td>
                        </tr>
                    </table>
                </div>
                <div>
                    <h4 class="title-material">Product Materials</h4>
                    @{
                        double jewelryPrice = 0;
                        var metalMaterials = Model.Jewelry.JewelryMaterials.Where(jm => jm.Material.IsMetail);
                        if (metalMaterials != null && metalMaterials.Any())
                        {
                            <h5 class="title-material">Metal Materials</h5>
                            <table>
                                <thead>
                                    <tr>
                                        <th>Metal Id</th>
                                        <th>Metal Name</th>
                                        <th>Weight (oz)</th>
                                        <th>Current Bid Price (USD)</th>
                                        <th>Metal Cost (USD)</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in metalMaterials)
                                    {
                                        <tr>
                                            <td>@item.Material.MaterialId</td>
                                            <td>@item.Material.MaterialName</td>
                                            <td>@item.JewelryWeight</td>
                                            <td>@item.Material.BidPrice</td>
                                            <td>@((item.Material.BidPrice * (decimal)item.JewelryWeight).ToString("C2"))</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                    }

                    @{
                        var gemstoneMaterials = Model.Jewelry.JewelryMaterials.Where(jm => !jm.Material.IsMetail);
                        if (gemstoneMaterials != null && gemstoneMaterials.Any())
                        {
                            <h5 class="title-material">Gemstone Materials</h5>
                            <table>
                                <thead>
                                    <tr>
                                        <th>Gem Id</th>
                                        <th>Gem Name</th>
                                        <th>Clarity</th>
                                        <th>Color</th>
                                        <th>Sharp</th>
                                        <th>Gemstone Price (USD)</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in gemstoneMaterials)
                                    {
                                        jewelryPrice += item.Material.MaterialCost;
                                        <tr>
                                            <td>@item.Material.MaterialId</td>
                                            <td>@item.Material.MaterialName</td>
                                            <td>@item.Material.Clarity</td>
                                            <td>@item.Material.Color</td>
                                            <td>@item.Material.Sharp</td>
                                            <td>@item.Material.MaterialCost.ToString("C2")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                    }
                </div>
                <div class="details-item" style="margin-top:20px;">
                    <dt><h4><strong>Base Price: </strong>@ViewData["BasePriceDisplay"]</h4></dt>
                </div>
            </div>
        </div>
    <div style="margin-top: 40px; text-align: end;">
        <div>
            <a class="btn btn-lg btn-warning" asp-page="./Edit" asp-route-id="@Model.Jewelry?.JewelryId">Edit</a>
        </div>
        <div style="margin-top: 50px;">
            <p>
                <a asp-page="./Index" style="">Back to List</a>
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-return-left" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M14.5 1.5a.5.5 0 0 1 .5.5v4.8a2.5 2.5 0 0 1-2.5 2.5H2.707l3.347 3.346a.5.5 0 0 1-.708.708l-4.2-4.2a.5.5 0 0 1 0-.708l4-4a.5.5 0 1 1 .708.708L2.707 8.3H12.5A1.5 1.5 0 0 0 14 6.8V2a.5.5 0 0 1 .5-.5z"></path>
                </svg>
            </p>
        </div>
    </div>
    </div>

