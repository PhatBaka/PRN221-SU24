@page "{handler?}"
@model UI.Pages.Jewelries.CreateModel

@{
	ViewData["Title"] = "Create";
}
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>@ViewData["Title"]</title>
	<link rel="stylesheet" href="https://cdn.quilljs.com/1.3.6/quill.snow.css">
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script class="jsbin" src="https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"></script>
</head>

<h1>New Jewelry</h1>
<hr />

<form method="post" id="jewelryForm" enctype="multipart/form-data">
	<div class="form-group">
		@* Display any custom message *@
		@if (!string.IsNullOrEmpty(Model.Message))
		{

			<div class="alert alert-danger d-flex align-items-center mt-3 mb-3" role="alert">
				<svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:">
					<use xlink:href="#exclamation-triangle-fill" />
				</svg>
				<div>
					<div class="text-danger">@Model.Message</div>
				</div>
			</div>
		}
	</div>
	<div class="container-lg product-form">
		<div class="container section">
			<h3 id="product-info-title">Product Information</h3>
			<div class="row product-info">
				<div class="col-md-4 image-section" style="align-content: center; padding: 20px;">
					<div class="mb-4 d-flex justify-content-center">
						<img id="selectedImage" class="mx-auto d-block img-fluid"
							 src="https://mdbootstrap.com/img/Photos/Others/placeholder.jpg"
							 alt="example placeholder" style="max-height: 310px" />
					</div>
					<div class="d-flex justify-content-center">
						<div data-mdb-ripple-init class="btn-sm btn-primary btn-rounded">
							<label class="form-label text-white m-1" for="customFile1">Load product image</label>
							<input type="file" asp-for="Jewelry.ImageDataFile" class="form-control d-none" id="customFile1" onchange="displaySelectedImage(event, 'selectedImage')" />
						</div>
						<span asp-validation-for="Jewelry.ImageDataFile" class="text-danger"></span>
					</div>
					<div class="d-flex justify-content-center mt-2" id="removeButtonContainer" style="display: none;">
						<button type="button" class="btn btn-danger btn-sm" onclick="removeSelectedImage('selectedImage', 'customFile1')">Remove</button>
					</div>
				</div>
				<div class="col-md-7 information-section">
					<div class="row">
						<div class="form-group col-8">
							<label class="control-label">Jewelry Name </label>
							<input asp-for="Jewelry.JewelryName" class="form-control" type="text" />
							<span asp-validation-for="Jewelry.JewelryName" class="text-danger"></span>
						</div>
						<div class="form-group col-4">
							<label class="control-label">Category</label>
							<select asp-for="Jewelry.CategoryName" class="form-control" asp-items=@Model.CategoryOptions></select>
						</div>
						<div class="form-group col-auto">
							<label class="control-label"> Total Weight (Gam)</label>
							<input asp-for="Jewelry.TotalWeight" class="form-control" type="number" min="0.01" />
							<span asp-validation-for="Jewelry.TotalWeight" class="text-danger"></span>
						</div>
					</div>
					<div class="col-md-auto">
						<div class="form-group">
							<label class="control-label">Description</label>
						</div>
						<div id="editor" style="height: 200px;"></div>
						<textarea asp-for="Jewelry.Description" id="jewelryDescription" style="display:none;"></textarea>
						<span asp-validation-for="Jewelry.Description" class="text-danger"></span>
					</div>
				</div>
			</div>
		</div>
		<div class="container section">
			<h3 id="product-info-title">Product Metal</h3>
			<div id="material-container">
				<div id="material-template" style="display: none;">
						<div class="row material-info product-info">
							<div class="form-group col-md-3">
								<label class="control-label">Metal Type</label>
								<select class="form-control metal-dropdown">
									<option value="" disabled selected>Select Metal Type</option>
									@foreach (var metaltype in Model.MetalOptions)
									{
										<option value="@metaltype.Value">@metaltype.Text</option>
									}
								</select>	
							</div>
							<div class="form-group col-md-3">
								<label class="control-label" >Material Weight (Gam)</label>
							<input type="number" class="form-control metal-weight" placeholder="0" min="0" step="0.01" />
							</div>
							<div class="form-group col-md-2">
								<label class="control-label">Bid Price (VNĐ/Gam)</label>
								<input type="text" class="form-control metal-bidprice" readonly />
							</div>
							<div class="form-group col-md-2">
								<label class="control-label">Offer Price (VNĐ/Gam)</label>
								<input type="text" class="form-control metal-offerprice" readonly />
							</div>
							<div class="form-group col-1">
								<button type="button" class="btn btn-sm btn-outline-danger remove-material" style="margin: 46px auto;">
									<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
										<path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708" />
									</svg>
								</button>
							</div>
						</div>
				</div>
			</div>
			<button type="button" style="margin: 15px 4px;"
					class="btn btn-md btn-outline-secondary" id="add-material">
				<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
					<path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4"></path>
				</svg>
				Add metal
			</button>
		</div>
		<div class="container section">
			<h3 id="product-info-title">Product Gemstone</h3>
			<div id="gemstone-container">
				<div id="gemstone-template" style="display: none;">
							<div class="row gemstone-info">
							<div class="form-group col-md-3">
								<label class="control-label">Gemstone Type</label>
							<select class="form-control gemstone-dropdown">
									<option value="" disabled selected>Select Gemstone Type</option>
									@foreach (var gem in Model.GemstoneOptions)
									{
										<option value="@gem.Value">@gem.Text</option>
									}
								</select>
							</div>
							<div class="form-group col-md-3">
								<label class="control-label">Quantity (Stone)</label>
							<input type="number" class="form-control gemstone-weight" placeholder="0" min="0" step="1" />
							</div>
							<div class="form-group col-md-3">
								<label class="control-label">Gemstone Price (VNĐ/Stone)</label>
								<input type="text" class="form-control gemstone-cost" readonly />
							</div>
							<div class="form-group col-1">
								<button type="button" class="btn btn-sm btn-outline-danger remove-gemstone" style="margin: 46px auto;">
									<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
										<path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708" />
									</svg>
								</button>
							</div>
						</div>
				</div>
			</div>
			<button type="button" style="margin: 15px 4px;"
					class="btn btn-md btn-outline-secondary" id="add-gemstone">
				<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
					<path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4"></path>
				</svg>
				Add gemstone
			</button>
		</div>
		<div class="container section">
			<h3 id="product-info-title">Stock Inventory</h3>
			<div class="row">
				<div class="form-group col-md-3">
					<label class="control-label">Quantity</label>
					<input asp-for="Jewelry.Quantity" class="form-control" type="number" min=0 placeholder="0" />
					<span asp-validation-for="Jewelry.Quantity" class="text-danger"></span>
				</div>
				<div class="form-group col-md-3">
					<label class="control-label">Sale Status</label>
					<select asp-for="Jewelry.StatusSale" class="form-control" asp-items=@Model.SaleStatusOptions></select>
					<span asp-validation-for="Jewelry.StatusSale" class="text-danger"></span>
				</div>
			</div>
		</div>
	<div class="container section">
		<h3 id="product-info-title">Product Price</h3>
		<div class="row">
				<div class="form-group col-md-3">
					<label class="control-label">Total Metal Price (VNĐ)</label>
					<input class="form-control price-input" id="total-metal-cost" readonly placeholder="0"/>
				</div>
				<div class="form-group col-md-3">
					<label class="control-label">Total Stone Cost (VNĐ)</label>
					<input class="form-control price-input" id="total-gemstone-cost" readonly placeholder="0" />
				</div>
				<div class="form-group col-md-3">
					<label class="control-label">Labor Price (VNĐ)</label>
					<input id="labor-cost" asp-for="Jewelry.LaborPrice" class="form-control price-input" placeholder="0" />
					<span asp-validation-for="Jewelry.LaborPrice" class="text-danger"></span>
				</div>
				<div class="form-group col-md-3">
					<label class="control-label">Markup Percentage (%)</label>
					<input asp-for="Jewelry.MarkupPercentage" class="form-control" type="number" id="markup-percent" min=0 placeholder="0"/>
					<span asp-validation-for="Jewelry.MarkupPercentage" class="text-danger"></span>
				</div>
				<div>
					<hr style="margin-top: 40px" />
				</div>
				<div class="row">
					<div class="col">
						<div>
							<label class="control-label">Sale Price</label>
						</div>
						<input class="form-control-lg price-input" id="sale-price" type="text"  disabled>
					</div>
				</div>
		</div>
	</div>
	<div>
			<input type="hidden" id="metalsJson" asp-for="MetalsJson" />
			<input type="hidden" id="gemstonesJson" asp-for="GemstonesJson" />
	</div>
	<div class="form-group" style="text-align: end;">
		<input style="width: 200px; font-weight: bolder" type="submit" value="Create" class="btn-lg btn-primary mt-4 mb-3" />
	</div>
</form>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}

<!-- Initialize Quill editor -->
<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
<script>
	var quill = new Quill('#editor', {
		theme: 'snow'
	});
	document.getElementById('jewelryForm').addEventListener('submit', function (e) {
		// Copy the HTML content from Quill editor to the hidden textarea
		var description = document.getElementById('jewelryDescription');
		description.value = quill.root.innerHTML;
	});
</script>

<script>
	$(document).ready(function () {
		// Load old data when errors return
		loadMetalsFromMetalsJson();
		loadGemstoneFromGemstonesJsons();

		// Add new material row
		$('#add-material').on('click', function () {
			addMetalTemplate();
		});

		// Remove material row
		$(document).on('click', '.remove-material', function () {
			$(this).closest('.material-info').remove();
			calculateTotalMetalPrice();
		});

		// Update total metal price on weight change
		$(document).on('change', '.metal-weight', function () {
			calculateTotalMetalPrice();
		});

		// Update metal prices and total metal price on dropdown change
		$(document).on('change', '.metal-dropdown', function () {
			var selectedMetalId = $(this).val();
			var $row = $(this).closest('.material-info');

			$.get(`/Jewelries/Create/MetaDetail?id=${selectedMetalId}`)
				.done(function (data) {
					if (data) {
						var bidPrice = formatNumber(data.bidPrice);
						var offerPrice = formatNumber(data.offerPrice);
						$row.find('.metal-bidprice').val(bidPrice);
						$row.find('.metal-offerprice').val(offerPrice);
						calculateTotalMetalPrice();
					} else {
						$row.find('.metal-bidprice, .metal-offerprice').val('no data');
						calculateTotalMetalPrice();
					}
				})
				.fail(function () {
					console.error('Failed to fetch metal details.');
					$row.find('.metal-bidprice, .metal-offerprice').val('no data');
				});
		});

		// Add new gemstone row
		$('#add-gemstone').on('click', function () {
			addGemstoneTemplate();
		});

		// Remove gemstone row
		$(document).on('click', '.remove-gemstone', function () {
			$(this).closest('.gemstone-info').remove();
			calculateTotalGemstonePrice();
		});

		// Update total gemstone price on weight change
		$(document).on('change', '.gemstone-weight', function () {
			calculateTotalGemstonePrice();
		});

		// Update gemstone prices and total gemstone price on dropdown change
		$(document).on('change', '.gemstone-dropdown', function () {
			var selectedGemId = $(this).val();
			var $row = $(this).closest('.gemstone-info');

			$.get(`/Jewelries/Create/GemDetail?id=${selectedGemId}`)
				.done(function (data) {
					if (data) {
						var gemCost = formatNumber(data.cost);
						$row.find('.gemstone-cost').val(gemCost);
						calculateTotalGemstonePrice();
					} else {
						$row.find('.gemstone-cost').val('no data');
						calculateTotalGemstonePrice();
					}
				})
				.fail(function () {
					console.error('Failed to fetch gemstone details.');
					$row.find('.gemstone-cost').val('no data');
				});
		});

		// Update sale price on various cost inputs change
		$('#labor-cost, #markup-percent').on('change', function () {
			calculateSalePrice();
		});

		// Handle form submission
		$('#jewelryForm').submit(function (event) {
			var metals = [];
			$('#material-container .material-info').each(function () {
				var metalId = $(this).find('.metal-dropdown').val();
				var metalWeight = $(this).find('.metal-weight').val();
				if (metalId && metalWeight) {
					metals.push({
						MaterialId: metalId,
						MaterialQuantWeight: metalWeight
					});
				}
			});

			var gemstones = [];
			$('#gemstone-container .gemstone-info').each(function () {
				var gemstoneId = $(this).find('.gemstone-dropdown').val();
				var gemstoneWeight = $(this).find('.gemstone-weight').val();
				if (gemstoneId && gemstoneWeight) {
					gemstones.push({
						MaterialId: gemstoneId,
						MaterialQuantWeight: gemstoneWeight
					});
				}
			});
			$('#metalsJson').val(JSON.stringify(metals));
			$('#gemstonesJson').val(JSON.stringify(gemstones));
		});

		function addMetalTemplate() {
			var materialTemplate = $('#material-template').html();
			$('#material-container').append(materialTemplate);
			calculateTotalMetalPrice();
		}

		function addGemstoneTemplate() {
			var gemstoneTemplate = $('#gemstone-template').html();
			$('#gemstone-container').append(gemstoneTemplate);
			calculateTotalGemstonePrice();
		}

		// Utility functions for number formatting and parsing
		function formatNumber(value) {
			return new Intl.NumberFormat('en-US').format(value);
		}

		function parseNumber(value) {
			return parseFloat(value.replace(/,/g, '')) || 0;
		}

		function calculateTotalMetalPrice() {
			let total = 0;
			$('.material-info').each(function () {
				const weight = parseNumber($(this).find('.metal-weight').val());
				const bidPrice = parseNumber($(this).find('.metal-bidprice').val());
				total += weight * bidPrice;
			});
			$('#total-metal-cost').val(formatNumber(total));
			calculateSalePrice();
		}

		function calculateTotalGemstonePrice() {
			let total = 0;
			$('.gemstone-info').each(function () {
				const weight = parseNumber($(this).find('.gemstone-weight').val());
				const bidPrice = parseNumber($(this).find('.gemstone-cost').val());
				total += weight * bidPrice;
			});
			$('#total-gemstone-cost').val(formatNumber(total));
			calculateSalePrice();
		}

		function calculateSalePrice() {
			const totalMetal = parseNumber($('#total-metal-cost').val());
			const totalGemstone = parseNumber($('#total-gemstone-cost').val());
			const laborCost = parseNumber($('#labor-cost').val());
			const markupPercent = parseNumber($('#markup-percent').val());

			let total = (totalMetal + totalGemstone + laborCost) * (1 + markupPercent / 100);
			$('#sale-price').val(formatNumber(total));
		}

		function loadMetalsFromMetalsJson() {
			var metalsJson = $('#metalsJson').val();
			if (metalsJson) {
				var metals = JSON.parse(metalsJson);
				metals.forEach(function (metal) {
					var $row = $($('#material-template').html());

					// Set selected value for dropdown
					$row.find('.metal-dropdown').val(metal.MaterialId);
					// Set value for input fields
					$row.find('.metal-weight').val(metal.MaterialQuantWeight);

					var selectedMetalId = metal.MaterialId;

					$.get(`/Jewelries/Create/MetaDetail?id=${selectedMetalId}`)
						.done(function (data) {
							if (data) {
								var bidPrice = formatNumber(data.bidPrice);
								var offerPrice = formatNumber(data.offerPrice);
								$row.find('.metal-bidprice').val(bidPrice);
								$row.find('.metal-offerprice').val(offerPrice);
								calculateTotalMetalPrice();
							} else {
								$row.find('.metal-bidprice, .metal-offerprice').val('no data');
								calculateTotalMetalPrice();
							}
						})
						.fail(function () {
							console.error('Failed to fetch metal details.');
							$row.find('.metal-bidprice, .metal-offerprice').val('no data');
						});
					$('#material-container').append($row);
					calculateTotalMetalPrice();
				});
			};
		}

		function loadGemstoneFromGemstonesJsons() {
			var gemstonesJson = $('#gemstonesJson').val();
			if (gemstonesJson) {
				var gemstones = JSON.parse(gemstonesJson);
				gemstones.forEach(function (gemstone) {
					var $row = $($('#gemstone-template').html());

					// Set selected value for dropdown
					$row.find('.gemstone-dropdown').val(gemstone.MaterialId);
					// Set value for input fields
					$row.find('.gemstone-weight').val(gemstone.MaterialQuantWeight);

					var selectedMetalId = gemstone.MaterialId;

					$.get(`/Jewelries/Create/GemDetail?id=${selectedMetalId}`)
						.done(function (data) {
							if (data) {
								var gemCost = formatNumber(data.cost);
								$row.find('.gemstone-cost').val(gemCost);
								calculateTotalGemstonePrice();
							} else {
								$row.find('.gemstone-cost').val('no data');
								calculateTotalGemstonePrice();
							}
						})
						.fail(function () {
							console.error('Failed to fetch gemstone details.');
							$row.find('.gemstone-cost').val('no data');
						});
					$('#gemstone-container').append($row);
					calculateTotalGemstonePrice();
				});
			};
		}
	});
</script>


<script>
	function displaySelectedImage(event, elementId) {
		const selectedImage = document.getElementById(elementId);
		const fileInput = event.target;
		const removeButtonContainer = document.getElementById('removeButtonContainer');

		if (fileInput.files && fileInput.files[0]) {
			const reader = new FileReader();

			reader.onload = function (e) {
				selectedImage.src = e.target.result;
				removeButtonContainer.style.display = 'block'; // Show the remove button
			};

			reader.readAsDataURL(fileInput.files[0]);
		}
	}

	function removeSelectedImage(imageId, fileInputId) {
		const selectedImage = document.getElementById(imageId);
		const fileInput = document.getElementById(fileInputId);
		const removeButtonContainer = document.getElementById('removeButtonContainer');

		// Reset the file input
		fileInput.value = '';

		// Reset the image to the placeholder
		selectedImage.src = 'https://mdbootstrap.com/img/Photos/Others/placeholder.jpg';

		// Hide the remove button
		removeButtonContainer.style.display = 'none';
	}
</script>
<script>
	document.querySelectorAll('.price-input').forEach(function (input) {
		input.addEventListener('input', function (e) {
			var value = e.target.value.replace(/,/g, ''); // Remove existing commas
			if (value === "") {
				e.target.value = "";
				return;
			}

			var formattedValue = new Intl.NumberFormat('en-US').format(value);
			e.target.value = formattedValue;
		});

		input.addEventListener('blur', function (e) {
			var value = e.target.value.replace(/,/g, ''); // Remove existing commas
			if (value === "") {
				e.target.value = "0";
				return;
			}

			var formattedValue = new Intl.NumberFormat('en-US').format(value);
			e.target.value = formattedValue;
		});
	});
</script>



