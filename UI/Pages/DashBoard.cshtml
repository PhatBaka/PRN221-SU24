@page
@model UI.Pages.DashBoardModel
@{

}

<style>
    .chart-container {
        width: 300px;
        height:300px;
    }
</style>

<h2>Total Revenue: @Model.FullPrice</h2>

<h2>Jewelry Distribution by Category</h2>

<div class="chart-container">

    <canvas id="categoryChart" width="500" height="500" style="height:50% !important; width: 50% !important"></canvas>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var ctx = document.getElementById('categoryChart').getContext('2d');
            var categoryData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.CategoryDataList));

            // Extract labels and data from the categoryData
            var categoryLabels = categoryData.map(item => item.CategoryName);
            var categoryPrices = categoryData.map(item => item.TotalPrice);

            // Define colors for each category
            var colors = [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
            ];

            // Define border colors for each category
            var borderColors = [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ];

            new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: categoryLabels,
                    datasets: [{
                        label: 'Total Price of Jewelries',
                        data: categoryPrices,
                        backgroundColor: colors,
                        borderColor: borderColors,
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
        });
    </script>
}
